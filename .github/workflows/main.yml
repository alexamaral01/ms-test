name: Docker Image Build and Deploy

on:
  push:
    branches: [ "ci-cd-workflow" ]
# Triggers the workflow when there's a push to the 'ci-cd-workflow' branch.


jobs:
  build:

    runs-on: ubuntu-latest
  # Specifies the latest Ubuntu runner for the job environment.

    steps:
    - uses: actions/checkout@v4
      with: 
        fetch-depth: 0
   # Checks out the repository code into the runner's workspace.
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
   # Sets up JDK 17, using the 'temurin' distribution, and enables Maven caching to speed up the build process.     

    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
    # Caches SonarQube packages to speed up subsequent builds and analyses.

    - name: Build and Analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn -B verify -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ekart-project
    # Uses Maven to build the application and run SonarQube analysis, skipping tests for faster builds.
